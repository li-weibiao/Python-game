#This program says hello and asks for my name.
print ('hello world!')
print ('what is your name?')
myName = input()
print ('It is good to meet you, ' + myName)

############################################
#whatIHadForBreakfastThisMorning     骆驼命名法

像这样将变量名首字母大写的方式,叫做骆驼命名法,它使得代码更具有可读性。
程序员还喜欢使用较短的变量名,以使得代码更容易理解: breakfast或者
 foodThisMorning,要比 whatIHadForBreakfastThisMorn更容易阅读。这些都是惯
你也可以不这么做,但是在 Python编程中,这些是标准的做法。

1.字符串值（字符串值使用单引号''作为起始和结束，python将变量计算为变量中所存储的值）
2.连接字符串（对于字符串和整数来讲，+操作符的作用并不相同，因为字符串和整数是不同的数据类型，对于字符串，+操作符会把他们连接起来，
而对于整数和浮点数，+操作符会把他们相加）
3.在IDLE的文件编辑器中编写程序
4.创建hello world程序
5.保存程序
6.运行程序
7.hello world程序如何工作（每行代码就是指令，指令构成了程序，从上到下，依次执行，在程序中，把python当前所处的指令叫做执行）
8.注释（#，python会忽略掉注释）
9.函数：程序中的小程序（print()函数,input()函数）
10.终止程序（一旦程序执行了最后一行代码，它会终止或者退出，请记住，计算机只能做程序要求它做的事情，计算机不会说话，只能严格遵循你给它的指令）
11.命名变量（骆驼命名法）

小结：一旦学习了字符串和函数,就可以开始编写与用户交互的程序了。这很重要,
因为文本是用户和计算机彼此通信的主要方式。使用 input函数,用户通过键盘输
入文本。使用print函数,计算机把文本显示到屏幕上。
字符串只是一种新的数据类型的值。任何值都有一种数据类型,并且一个值的
数据类型会影响到+操作符的功能。
函数可以用做程序的一部分（程序中的小程序）,以执行一些复杂的指令。 Python有许多内建函数,
我们会在本书中介绍它们。在表达式中,在可以使用值的任何位置,也都可以使用
函数调用。例如print()、input()函数。
在程序中,把 Python当前所处的指令叫做执行在下一章中,我们将介绍使得
执行移动的更多的方式,而不只是直接从上向下执行。一旦我们掌握了这些知识,
就为创建游戏做好了准备。

#无论操作什么，都会给python返回一个值

1.整数和浮点数（int整数，float浮点数）
2.表达式（+号，指令之前不能有空格，字符串和整数是不同的数据类型）
3.计算表达式（位于括号中的表达式部分先计算，乘法和除法在加法和减法之前先计算，从左向右计算，单个值也可以是表达式，如15的计算结果值就是值15）
4.语法错误
5.在变量中存储值

小结：在本章中,我们介绍了关于编写 Python指令的基础知识。计算机不具备人的常
识,并且只能理解特定的指令。因此, Python要你准确地告诉它要做什么工作
表达式是用操作符(如+或-)把值(如2或5)组合起来。 Python可以计算表
达式,也就是把表达式规约为一个值。可以把值保存在变量中,以便程序可以记住
它们,并且随后可以使用它们。
在 Python中,有许多其他类型的操作符和值。在下一章中,我们将介绍更多的
基础概念,并且编写第一个程序。我们还会介绍在表达式中使用文本。Python不仅
能够处理数字,它的功能比计算器要强大得多。
