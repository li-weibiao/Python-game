#This is a Guess the Number game.
import random       #导入random模块，为了后面randint函数的引用做准备

guessesTaken = 0    #先定义一个变量

print('Hello! What is your name?')   #print函数输出
myName = input()               #定义myName变量

number = random.randint(1,20)        #生成一个1到20的随机数
print('Well, '+ myName + ' ,I am thinking of a number between 1 and 20.' )

for i in range(6):             #用range函数循环6次
    print('Take a guess. ')
    guess = input()            #用玩家输入的值来定义一个变量
    guess = int(guess)         #将这个值用int函数转换为整数

    if guess < number:
        print('Your guess is too low. ')

    if guess > number:
        print('Your guess is too high. ')

    if guess == number:
        break

if guess == number:
    guessesTaken = str(i + 1)          #因为range函数是从0开始，循环了0-5共6次，所以我这里加了1，增加1次，符合人类习惯，用str函数将整数转换为字符串
    print('Good job, '+ myName + ' ! You guessed my number in ' +  guessesTaken  + ' guesses!')

if guess != number:
    number = str(number)
    print('Nope. The number I was thinking of was ' + number + '.')
    
    #################################################################################################
    
    1.导入random模块（import语句）
    2.用random.randint()函数生成随机数
    3.欢迎玩家
    4.流程控制语句（for,if,else,break,若无例外，程序都是从上到下执行，我们可以根据条件来执行循环或者跳过指令，这些语句就是流程控制语句
    ，它们改变了程序执行过程中的流程）
    5.使用循环来重复代码
    6.组织语句块（用缩进来判断，拥有相同的缩进或更多的缩进的任何代码行，都被认为是语句块的一部分，当有一行代码和该语句块之前的缩进相同，那么这个
    语句块便结束了）
    7.for循环语句（在for语句中，在条件之后总是有一个冒号：，通过循环的每一次执行，叫做一次迭代）
    8.玩家的猜测
    9.使用int()函数,float()函数,str()函数,bool()函数来转换值
    10.布尔数据类型（Python中的每一个值，都属于一种数据类型，布尔数据类型只有两个值：True和False,这两个值的首字母必须大写，值的剩余部分必须小写）
    11.比较操作符（<,>,==,!=,<=,>=）
    12.用条件检查True和False
    13.体验布尔值、比较操作符和条件（可以使用比较操作符来计算字符串表达式，字符串和整数值不会彼此相等）
        >>> 0 < 6                                                         >>> 'hello' == 'hello'
            True                                                               True
        >>> 6 < 0
            False
        >>> 10 < 10
            False
    14.=和==的区别
    15.if语句（如果if语句的条件计算为True，则if语句块后面的代码将会运行，反之则不会，使用if语句，可以让程序只运行我们想要它运行的某些代码）
    16.用break语句提早离开循环（利用break可以跳到for语句块结束之后的第一行，break语句只会出现在循环中）
    17.判断玩家是否赢了（我们可以通过有没有缩进，来判断它是否属于一个语句块，只有字符串值才能和其他的字符串连接）
    18.判断玩家是否输了
    
    小结：编程就是为程序编写代码的行为,也就是说,创建计算机可以执行的程序。
当你看到某人使用计算机程序时(例如,玩你的“猜数字”游戏),你所看到
的只是屏幕上出现的一些文本。根据程序的指令以及玩家用键盘输入的文本(程序
的输入),程序决定了到底在屏幕上显示什么样的文本(程序输出)程序只是基于
用户输入而执行的动作的一个指令集。
只有几个不同种类的指令
●
表达式是由操作符连接的值。表达式的最终结果是一个单独的值,例如2+2
的结果是4,或者Hello'++'World'Hello的结果是 World'当表达式跟在if
和 while关键字后面的时候,我们也可以把它们称为条件。
赋值语句把值存储到变量中,以便在随后的程序中能够使用这个值。
●
 if while和 break语句都是流程控制语句,可以导致执行跳过指令、循环地执
行指令或者跳出循环。函数调用也可以通过跳转到函数中的指令来改变执行的
流程
 print函数和 input函数。这两个函数分别在屏幕上显示文本和从键盘上接收
到的文本。这叫做I/O(输入/输出),因为i/O负责程序的输入和输出。
就这些了,只有这4种指令。当然,关于这4种类型的指令,还有许多的细节。
在本书后面的各章中,我们将学习新的数据类型和操作符、新的流程控制语句以及
许多其他的 Python函数;还有不同类型的1,如用鼠标输入、输出声音和图形,
而不是只输出文本。

    
     
